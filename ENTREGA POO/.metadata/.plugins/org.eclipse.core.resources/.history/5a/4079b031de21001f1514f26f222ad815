import java.util.Iterator;
import java.util.LinkedList;

import javax.swing.JOptionPane;

public class GestorEquipo {
	
	private LinkedList<Equipo> equipos = new LinkedList<Equipo>();
	private String anotador;

	public GestorEquipo() {
		
	}

	public LinkedList<Equipo> getEquipos() {
		return equipos;
	}

	public void setEquipos(LinkedList<Equipo> equipos) {
		this.equipos = equipos;
	}

	@Override
	public String toString() {
		return "GestorEquipo [equipos=" + equipos + "]";
	}
	
	public Equipo JugarPartido(Equipo equipo1, Equipo equipo2) {
		if (equipo1==equipo2) {
			JOptionPane.showMessageDialog(null, "Has elegido dos veces el mismo equipo, el partido no puede jugarse.");
		} else {
			if (equipo1.getPlantel().size() >= 8 && equipo2.getPlantel().size() >= 8) {
				JOptionPane.showMessageDialog(null, "El partido esta por comenzar.");
				int goles1;
				int goles2;
				do {goles1=(int)(Math.random()*5);
				goles2=(int)(Math.random()*5);
				if (goles1==goles2) {
					JOptionPane.showMessageDialog(null, "Hubo un empate " + goles1 + " a " + goles2 + " habra penales.");
				}
				} while (goles1 == goles2);
				if (goles1>goles2) {
					for (int i = 0; i < goles1; i++) {
						int anotadorrandom=(int)(Math.random()*12);
						Jugador anotador= equipo1.getPlantel().get(anotadorrandom);
						JOptionPane.showMessageDialog(null, "Gano " + equipo1.getNombre() + " por " + goles1 + " a " + goles2 + "\nGoles de " + equipo1.getNombre() + ":\n" + anotador);} 				
					
					return equipo1;
				} else {
					JOptionPane.showMessageDialog(null, "Gano " + equipo2.getNombre() + " por " + goles2 + " a " + goles1 );
					return equipo2;
				}
			} else {
				JOptionPane.showMessageDialog(null, "No hay jugadores suficientes para jugar el partido.");
				
			}
			return null;
		}
		return null;
	}
	
	
	
	

}
